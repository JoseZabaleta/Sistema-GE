package vista;

import controlador.Ctrl_Asignacion;
import controlador.Ctrl_Producto;
import java.awt.Color;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import modelo.Asignacion;
import modelo.Producto;

/**
 *
 * @author josez
 */
public class InterRegistro extends javax.swing.JInternalFrame {

    int obetenerIdEmpleado = 0;
    int obetenerIdSupervisor = 0;
    int obetenerIdOperacion = 0;

    /**
     * Creates new form InterProducto
     */
    public InterRegistro() {

        initComponents();
        this.setSize(new Dimension(400, 450));
        this.setTitle("Nuevo registro de Asignación");
        this.CargarComboOperacion();
        this.CargarComboUsuario();
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        lbl_descripcion = new javax.swing.JLabel();
        lbl_idOperacion = new javax.swing.JLabel();
        lbl_idSupervisor = new javax.swing.JLabel();
        lbl_idEmpleado = new javax.swing.JLabel();
        lbl_fechaInicio = new javax.swing.JLabel();
        lbl_fechaFIn = new javax.swing.JLabel();
        txt_descripcion = new javax.swing.JTextField();
        jButton_Guardar = new javax.swing.JButton();
        ComboBox_operacion = new javax.swing.JComboBox<>();
        ComboBox_idSupervisor = new javax.swing.JComboBox<>();
        ComboBox_idEmpleado = new javax.swing.JComboBox<>();
        jDateChooser_fechaInicio = new com.toedter.calendar.JDateChooser();
        jDateChooser_fechaFin = new com.toedter.calendar.JDateChooser();
        jLabel_wallpaper = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nuevo Asignación");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        lbl_descripcion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_descripcion.setForeground(new java.awt.Color(255, 255, 255));
        lbl_descripcion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_descripcion.setText("Descripción:");
        getContentPane().add(lbl_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 100, -1));

        lbl_idOperacion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_idOperacion.setForeground(new java.awt.Color(255, 255, 255));
        lbl_idOperacion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_idOperacion.setText("Codigo operacion:");
        getContentPane().add(lbl_idOperacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 130, -1));

        lbl_idSupervisor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_idSupervisor.setForeground(new java.awt.Color(255, 255, 255));
        lbl_idSupervisor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_idSupervisor.setText("Id supervisor:");
        getContentPane().add(lbl_idSupervisor, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 110, -1));

        lbl_idEmpleado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_idEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        lbl_idEmpleado.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_idEmpleado.setText("Id Empleado Resp:");
        getContentPane().add(lbl_idEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 140, -1));

        lbl_fechaInicio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_fechaInicio.setForeground(new java.awt.Color(255, 255, 255));
        lbl_fechaInicio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_fechaInicio.setText("Fecha inicio:");
        getContentPane().add(lbl_fechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 100, -1));

        lbl_fechaFIn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_fechaFIn.setForeground(new java.awt.Color(255, 255, 255));
        lbl_fechaFIn.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_fechaFIn.setText("Fecha fin:");
        getContentPane().add(lbl_fechaFIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 100, -1));

        txt_descripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_descripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_descripcionActionPerformed(evt);
            }
        });
        getContentPane().add(txt_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 170, -1));

        jButton_Guardar.setBackground(new java.awt.Color(0, 204, 204));
        jButton_Guardar.setText("Guardar");
        jButton_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GuardarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 120, 40));

        ComboBox_operacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione codigo:", " " }));
        ComboBox_operacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_operacionActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBox_operacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 170, -1));

        ComboBox_idSupervisor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione supervisor:", " " }));
        ComboBox_idSupervisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_idSupervisorActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBox_idSupervisor, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 170, -1));

        ComboBox_idEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione empleado:", " " }));
        ComboBox_idEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_idEmpleadoActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBox_idEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 170, -1));
        getContentPane().add(jDateChooser_fechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 170, -1));
        getContentPane().add(jDateChooser_fechaFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 170, -1));

        jLabel_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 410));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_descripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_descripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_descripcionActionPerformed

    private void jButton_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GuardarActionPerformed
        // TODO add your handling code here:
        Asignacion asignacion = new Asignacion();
        Ctrl_Asignacion controlAsignacion = new Ctrl_Asignacion();
        String usuario = "";
        String operacion = "";
        String supervisor = "";
        operacion = ComboBox_operacion.getSelectedItem().toString().trim();
        usuario = ComboBox_idEmpleado.getSelectedItem().toString().trim();
        supervisor = ComboBox_idSupervisor.getSelectedItem().toString().trim();

        //VALIDAR CAMPOS
        if (ComboBox_operacion.getSelectedItem().equals("seleccione codigo:")
                || txt_descripcion.getText().equals("")
                || ComboBox_idSupervisor.getSelectedItem().equals("Seleccione supervisor:")
                || ComboBox_idEmpleado.getSelectedItem().equals("Sleccione empleado:")
                || jDateChooser_fechaInicio.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");

        } else {
            //consulta para validar duplicidad de producto

            if (operacion.equalsIgnoreCase("Seleccione codigo:")) {
                JOptionPane.showMessageDialog(null, "Seleccione codigo operacion");
            } else {
                if (supervisor.equalsIgnoreCase("Seleccione supervisor:")) {
                    JOptionPane.showMessageDialog(null, "Seleccion un supervisor");
                } else {
                    if (usuario.equalsIgnoreCase("Seleccione empleado:")) {
                        JOptionPane.showMessageDialog(null, "Seleccione un empleado");
                    } else {
                        try {
                            this.ObtenerIdOperacion();
                            asignacion.setIdOperacion(obetenerIdOperacion);

                            asignacion.setDescripcion(txt_descripcion.getText().trim());
                            this.ObtenerIdUsuario();
                            this.ObtenerIdSupervisor();
                            asignacion.setIdSupervisor(obetenerIdSupervisor);
                            asignacion.setIdEmpleado(obetenerIdEmpleado);
                            Date fechaSeleccionadaI = jDateChooser_fechaInicio.getDate();
                            if (fechaSeleccionadaI != null) {
                                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                                String fechaComoString = sdf.format(fechaSeleccionadaI);
                                asignacion.setFechaInicio(fechaComoString);
                            }
                            Date fechaSeleccionadaII = jDateChooser_fechaFin.getDate();

                            if (fechaSeleccionadaII != null) {
                                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                                String fechaComoString2 = sdf.format(fechaSeleccionadaII);
                                asignacion.setFechaFin(fechaComoString2);
                            }
                           
                            asignacion.setEvaluacion(null);

                            if (controlAsignacion.guardar(asignacion)) {
                                JOptionPane.showMessageDialog(null, "Registro Guardado");
                                this.CargarComboOperacion();
                                this.CargarComboUsuario();

                                this.LimpiarCampos();

                            } else {
                                JOptionPane.showMessageDialog(null, "Error al guardar producto");
                            }

                        } catch (NumberFormatException e) {
                            System.out.println("Error en : " + e);
                        }
                    }

                }

            }
    }//GEN-LAST:event_jButton_GuardarActionPerformed
    }
    private void ComboBox_operacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_operacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_operacionActionPerformed

    private void ComboBox_idEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_idEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_idEmpleadoActionPerformed

    private void ComboBox_idSupervisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_idSupervisorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_idSupervisorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox_idEmpleado;
    private javax.swing.JComboBox<String> ComboBox_idSupervisor;
    private javax.swing.JComboBox<String> ComboBox_operacion;
    private javax.swing.JButton jButton_Guardar;
    private com.toedter.calendar.JDateChooser jDateChooser_fechaFin;
    private com.toedter.calendar.JDateChooser jDateChooser_fechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lbl_descripcion;
    private javax.swing.JLabel lbl_fechaFIn;
    private javax.swing.JLabel lbl_fechaInicio;
    private javax.swing.JLabel lbl_idEmpleado;
    private javax.swing.JLabel lbl_idOperacion;
    private javax.swing.JLabel lbl_idSupervisor;
    private javax.swing.JTextField txt_descripcion;
    // End of variables declaration//GEN-END:variables

    /**
     *
     * metodo limpiar campos
     */
    private void LimpiarCampos() {
        ComboBox_operacion.setSelectedItem("Seleccione codigo:");
        txt_descripcion.setText("");
        ComboBox_idSupervisor.setSelectedItem("Seleccione supervisor:");
        ComboBox_idEmpleado.setSelectedItem("Seleccione empleado");
        jDateChooser_fechaInicio.setDate(null);
        jDateChooser_fechaFin.setDate(null);
        

    }

    /**
     * *
     * metodo para cargar categorias en combo box
     */
    private void CargarComboUsuario() {
        Connection cn = conexion.Conexion.conectar();
        String sql = "select *from tb_usuario";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ComboBox_idEmpleado.removeAllItems();//remueve items por defecto
            ComboBox_idEmpleado.addItem("Seleccione empleado:");
            ComboBox_idSupervisor.removeAllItems();//remueve items por defecto
            ComboBox_idSupervisor.addItem("Seleccione supervisor:");
            while (rs.next()) {
                ComboBox_idEmpleado.addItem(rs.getInt("idUsuario") + " " + rs.getString("nombre") + " " + rs.getString("apellido"));
                ComboBox_idSupervisor.addItem(rs.getInt("idUsuario") + " " + rs.getString("nombre") + " " + rs.getString("apellido"));
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar empleados");
        }

    }

    /**
     * *
     * metodo para obtener id categorias en combo box
     */
    private int ObtenerIdUsuario() {
        String sql = "select * from tb_usuario where idUsuario ='" + ComboBox_idEmpleado.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = conexion.Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obetenerIdEmpleado = rs.getInt("idUsuario");

            }
        } catch (SQLException e) {
            System.out.println("Error al obtener id Empleado");
        }
        return obetenerIdEmpleado;
    }

    /**
     * metodo para obtener el id supervisor
     */
    private int ObtenerIdSupervisor() {
        String sql = "select * from tb_usuario where idUsuario ='" + ComboBox_idSupervisor.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = conexion.Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obetenerIdSupervisor = rs.getInt("idUsuario");

            }
        } catch (SQLException e) {
            System.out.println("Error al obtener id supervisor");
        }
        return obetenerIdSupervisor;
    }

    /**
     * *
     * metodo para cargar operaciones en el combo box
     */
    private void CargarComboOperacion() {
        Connection cn = conexion.Conexion.conectar();
        String sql = "select idOperacion, substring(descripcion, 1, 30) AS descripcion_corta from tb_operaciones";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ComboBox_operacion.removeAllItems();//remueve items por defecto
            ComboBox_operacion.addItem("Seleccione operacion:");
            while (rs.next()) {
                ComboBox_operacion.addItem(rs.getInt("idOperacion") + " " + rs.getString("descripcion_corta"));
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar operacion");
        }

    }
    /**
     * Metodo para obtener id operaciones de la tabla tb_operaciones
     * @return 
     */

    private int ObtenerIdOperacion() {
        String sql = "select * from tb_operaciones where idOperacion ='" + ComboBox_operacion.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = conexion.Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obetenerIdOperacion = rs.getInt("idOperacion");

            }
        } catch (SQLException e) {
            System.out.println("Error al obtener id Operacion");
        }
        return obetenerIdOperacion;
    }
}

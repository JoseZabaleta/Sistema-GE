package vista;

import controlador.Ctrl_Producto;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import modelo.Producto;

/**
 *
 * @author josez
 */
public class InterActualizarStock extends javax.swing.JInternalFrame {
    int idProducto=0;
    int cantidad =0;

    /**
     * Creates new form InterActualizarStock
     */
    public InterActualizarStock() {
        initComponents();
        setTitle("Actualizar Stock Productos");
        setSize(new Dimension(400, 300));
        this.CargarCOmboProductos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_cantidadActual = new javax.swing.JTextField();
        txt_cantidad_nuevo = new javax.swing.JTextField();
        jComboBox_producto = new javax.swing.JComboBox<>();
        jButton_actualizar = new javax.swing.JButton();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Actualizar Stock");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Producto:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 100, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Stock Actual:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 100, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Stock Nuevo:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 135, 100, -1));

        txt_cantidadActual.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txt_cantidadActual.setEnabled(false);
        getContentPane().add(txt_cantidadActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 95, 170, -1));

        txt_cantidad_nuevo.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        getContentPane().add(txt_cantidad_nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 170, -1));

        jComboBox_producto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Producto:", "Item 2", "Item 3", "Item 4" }));
        jComboBox_producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_productoActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox_producto, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 170, -1));

        jButton_actualizar.setBackground(new java.awt.Color(204, 255, 204));
        jButton_actualizar.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jButton_actualizar.setText("Actualizar");
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 170, -1));

        jLabel_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 260));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_productoActionPerformed
       this.MostrarStock();
    }//GEN-LAST:event_jComboBox_productoActionPerformed

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed
        //validar seleccion producto
        if (!jComboBox_producto.getSelectedItem().equals("Seleccione Producto:")) {
          //validar campos vacios
            if (!txt_cantidad_nuevo.getText().isEmpty()) {
               //validar que el usuario no ingrese otros caracteres no numericos
               boolean validacion=validarcaracteres(txt_cantidad_nuevo.getText().trim());
                if (validacion) {
                    //validamos la cantidad sea mayor a cero
                    if (Integer.parseInt(txt_cantidad_nuevo.getText())>0) {
                        Producto producto = new Producto();
                        Ctrl_Producto controladorProducto = new Ctrl_Producto();
                        int stockAc = Integer.parseInt(txt_cantidadActual.getText().trim());
                        int stockNuevo =Integer.parseInt(txt_cantidad_nuevo.getText().trim());
                        
                        stockNuevo = stockAc+stockNuevo;
                        producto.setCantidad(stockNuevo);
                        if (controladorProducto.actualizarStock(producto, idProducto)) {
                            JOptionPane.showMessageDialog(null, "Stock actualizado");
                            jComboBox_producto.setSelectedItem("Seleccione Producto:");
                            txt_cantidadActual.setText("");
                            txt_cantidad_nuevo.setText("");
                            this.CargarCOmboProductos();
                        } else {
                            JOptionPane.showMessageDialog(null, "Error al actualizar");
                        }
                        
                    } else {
                        JOptionPane.showMessageDialog(null, "La catindad no puede ser cero");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "No se admiten caracteres no numericos");
                }
                
                
            } else {
                JOptionPane.showMessageDialog(null, "Ingrese cantidad");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un producto");
        }
        
    }//GEN-LAST:event_jButton_actualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JComboBox<String> jComboBox_producto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JTextField txt_cantidadActual;
    private javax.swing.JTextField txt_cantidad_nuevo;
    // End of variables declaration//GEN-END:variables
/**
     * Metodo para cargar productos en combo box
     */

    private void CargarCOmboProductos() {
        Connection cn = conexion.Conexion.conectar();
        String sql = "select *from tb_producto";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_producto.removeAllItems();
            jComboBox_producto.addItem("Seleccione Producto:");
            while (rs.next()) {
                jComboBox_producto.addItem(rs.getString("nombre"));

            }

        } catch (SQLException e) {
            System.out.println("Error al cargar los productos" + e);
        }
    }

    //Metodo Seleccionar producto en InterStock
    
    private void MostrarStock() {
        try {
            Connection cn = conexion.Conexion.conectar();
            String sql = "select * from tb_producto where nombre = '"+this.jComboBox_producto.getSelectedItem()+"'";
            Statement st;
            st =cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                idProducto = rs.getInt("idProducto");
                cantidad = rs.getInt("cantidad");
                txt_cantidadActual.setText(String.valueOf(cantidad));
                
            }else{
            txt_cantidadActual.setText("");// Cuando se selecciona el item uno, que vacio
            }

        } catch (Exception e) {
            System.out.println("Error al obtener stock producto" + e);
        }
    }
    //metdo validacion de caracteres no numkericos
    private boolean validarcaracteres(String valor){
    int num;
        try {
            num=Integer.parseInt(valor);
            return true;
            
        } catch (NumberFormatException e) {
            return false;
        }
    }

}

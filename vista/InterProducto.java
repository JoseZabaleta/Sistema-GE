package vista;

import controlador.Ctrl_Producto;
import java.awt.Color;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import modelo.Producto;

/**
 *
 * @author josez
 */
public class InterProducto extends javax.swing.JInternalFrame {

    int obetenerIdCategoriaCombo = 0;

    /**
     * Creates new form InterProducto
     */
    public InterProducto() {

        initComponents();
        this.setSize(new Dimension(400, 300));
        this.setTitle("Nuevo Producto");

        this.CargarComboCategorias();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lbl_cantidad = new javax.swing.JLabel();
        lbl_nombre = new javax.swing.JLabel();
        lbl_precio = new javax.swing.JLabel();
        lbl_descripcion = new javax.swing.JLabel();
        lbl_iva = new javax.swing.JLabel();
        lbl_categoria = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        txt_cantidad = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        txt_descripcion = new javax.swing.JTextField();
        ComboBox_iva = new javax.swing.JComboBox<>();
        ComboBox_categoria = new javax.swing.JComboBox<>();
        jButton_Guardar = new javax.swing.JButton();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nuevo Producto");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        lbl_cantidad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_cantidad.setForeground(new java.awt.Color(255, 255, 255));
        lbl_cantidad.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_cantidad.setText("Cantidad:");
        getContentPane().add(lbl_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 100, -1));

        lbl_nombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_nombre.setForeground(new java.awt.Color(255, 255, 255));
        lbl_nombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_nombre.setText("Nombre:");
        getContentPane().add(lbl_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 100, -1));

        lbl_precio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_precio.setForeground(new java.awt.Color(255, 255, 255));
        lbl_precio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_precio.setText("Precio:");
        getContentPane().add(lbl_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 100, -1));

        lbl_descripcion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_descripcion.setForeground(new java.awt.Color(255, 255, 255));
        lbl_descripcion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_descripcion.setText("Descripcion:");
        getContentPane().add(lbl_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 100, -1));

        lbl_iva.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_iva.setForeground(new java.awt.Color(255, 255, 255));
        lbl_iva.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_iva.setText("IVA:");
        getContentPane().add(lbl_iva, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 100, -1));

        lbl_categoria.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_categoria.setForeground(new java.awt.Color(255, 255, 255));
        lbl_categoria.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_categoria.setText("Categoria:");
        getContentPane().add(lbl_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 100, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 170, -1));

        txt_cantidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_cantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cantidadActionPerformed(evt);
            }
        });
        getContentPane().add(txt_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 80, 170, -1));

        txt_precio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        getContentPane().add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 170, -1));

        txt_descripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_descripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_descripcionActionPerformed(evt);
            }
        });
        getContentPane().add(txt_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, 170, -1));

        ComboBox_iva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione IVA:", "Exento IVA", "IVA 19%", " " }));
        ComboBox_iva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_ivaActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBox_iva, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 170, -1));

        ComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Categoria:", " " }));
        ComboBox_categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_categoriaActionPerformed(evt);
            }
        });
        getContentPane().add(ComboBox_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 170, -1));

        jButton_Guardar.setBackground(new java.awt.Color(0, 204, 204));
        jButton_Guardar.setText("Guardar");
        jButton_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_GuardarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 90, 30));

        jLabel_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 6, 390, 260));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboBox_ivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_ivaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_ivaActionPerformed

    private void txt_cantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cantidadActionPerformed

    private void txt_descripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_descripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_descripcionActionPerformed

    private void ComboBox_categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_categoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_categoriaActionPerformed

    private void jButton_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_GuardarActionPerformed
        // TODO add your handling code here:
        Producto producto = new Producto();
        Ctrl_Producto controlProducto = new Ctrl_Producto();
        String iva = "";
        String categoria = "";
        iva = ComboBox_iva.getSelectedItem().toString().trim();
        categoria = ComboBox_categoria.getSelectedItem().toString().trim();

        //VALIDAR CAMPOS
        if (txt_nombre.getText().equals("")
                || txt_cantidad.getText().equals("") || txt_precio.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
            txt_nombre.setBackground(Color.lightGray);
            txt_cantidad.setBackground(Color.lightGray);
            txt_precio.setBackground(Color.lightGray);
            txt_descripcion.setBackground(Color.lightGray);
        } else {
            //consulta para validar duplicidad de producto
            if (!controlProducto.existeProducto(txt_nombre.getText().trim())) {
                if (iva.equalsIgnoreCase("Seleccione IVA:")) {
                    JOptionPane.showMessageDialog(null, "Seleccion porcentaje IVA");
                } else {
                    if (categoria.equalsIgnoreCase("Seleccione Categoria:")) {
                        JOptionPane.showMessageDialog(null, "Seleccion una categoria");
                    } else {
                        try {
                            producto.setNombre(txt_nombre.getText().trim());
                            producto.setCantidad(Integer.parseInt(txt_cantidad.getText().trim()));
                            String precioTXT = "";
                            double Precio = 0.0;
                            precioTXT = txt_precio.getText().trim();
                            boolean aux = false;
                            /**
                             * Si el usuario ingresa (coma) como punto decimal,
                             * lo transforma en (punto)
                             */
                            for (int i = 0; i < precioTXT.length(); i++) {
                                if (precioTXT.charAt(i) == ',') {
                                    String precioNuevo = precioTXT.replace(",", ".");
                                    Precio = Double.parseDouble(precioNuevo);
                                    aux = true;
                                }
                            }
                            //evaluar la consicion
                            if (aux == true) {
                                producto.setPrecio(Precio);
                            } else {
                                Precio = Double.parseDouble(precioTXT);
                                producto.setPrecio(Precio);
                            }
                            producto.setDescripcion(txt_descripcion.getText().trim());
                            //iva
                            if (iva.equalsIgnoreCase("Exento IVA")) {
                                producto.setPorcentajeIva(0);

                            } else if (iva.equalsIgnoreCase("IVA 19%")) {
                                producto.setPorcentajeIva(19);
                            }
                            //idCategoria
                            this.ObtenerIdCategoria();
                            producto.setIdCategoria(obetenerIdCategoriaCombo);
                            producto.setEstado(1);

                            if (controlProducto.guardar(producto)) {
                                JOptionPane.showMessageDialog(null, "Registro Guardado");
                                txt_nombre.setBackground(Color.white);
                                txt_cantidad.setBackground(Color.white);
                                txt_precio.setBackground(Color.white);
                                txt_descripcion.setBackground(Color.white);
                                
                                this.CargarComboCategorias();
                                this.ComboBox_iva.setSelectedItem("Seleccione IVA:");
                                this.LimpiarCampos();
                                
                            } else {
                                JOptionPane.showMessageDialog(null,"Error al guardar producto");
                            }

                        } catch (NumberFormatException e) {
                            System.out.println("Error en : "+e);
                        }
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "Producto ya existe");
            }
        }


    }//GEN-LAST:event_jButton_GuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox_categoria;
    private javax.swing.JComboBox<String> ComboBox_iva;
    private javax.swing.JButton jButton_Guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JLabel lbl_cantidad;
    private javax.swing.JLabel lbl_categoria;
    private javax.swing.JLabel lbl_descripcion;
    private javax.swing.JLabel lbl_iva;
    private javax.swing.JLabel lbl_nombre;
    private javax.swing.JLabel lbl_precio;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables

    /**
     *
     * metodo limpiar campos
     */
    
    private void LimpiarCampos(){
        txt_nombre.setText("");
        txt_cantidad.setText("");
        txt_precio.setText("");
        txt_descripcion.setText("");
   }
    
    
    /**
     * *
     * metodo para cargar categorias en combo box
     */
    private void CargarComboCategorias() {
        Connection cn = conexion.Conexion.conectar();
        String sql = "select *from tb_categoria";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            ComboBox_categoria.removeAllItems();//remueve items por defecto
            ComboBox_categoria.addItem("Seleccione categoria:");
            while (rs.next()) {
                ComboBox_categoria.addItem(rs.getString("descripcion"));
            }
            cn.close();

        } catch (SQLException e) {
            System.out.println("Error al cargar categorias");
        }

    }

    /**
     * *
     * metodo para obtener id categorias en combo box
     */
    private int ObtenerIdCategoria() {
        String sql = "select * from tb_categoria where descripcion ='" + ComboBox_categoria.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = conexion.Conexion.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obetenerIdCategoriaCombo = rs.getInt("idCategoria");

            }
        } catch (SQLException e) {
            System.out.println("Error al obtener id Categoria");
        }
        return obetenerIdCategoriaCombo;
    }
}

package vista;

import conexion.Conexion;
import controlador.Ctrl_Categoria;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Categoria;

/**
 *
 * @author josez
 */
public class InterGestionarCategoria extends javax.swing.JInternalFrame {

    private int idCategoria;

    public InterGestionarCategoria() {
        initComponents();
        this.setSize(new Dimension(600, 400));
        this.setTitle("Gestionar Categorias");
        this.CargarTablaCategorias();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_categorias = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_actualizar_categoria = new javax.swing.JButton();
        jButton_elimianr_categoria = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel_descripcion = new javax.swing.JLabel();
        txt_descripcion = new javax.swing.JTextField();
        jlabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrar Categorias");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_categorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_categorias);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 330, 210));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 350, 250));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_actualizar_categoria.setBackground(new java.awt.Color(204, 255, 204));
        jButton_actualizar_categoria.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton_actualizar_categoria.setText("Actualizar");
        jButton_actualizar_categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizar_categoriaActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_actualizar_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 90, -1));

        jButton_elimianr_categoria.setBackground(new java.awt.Color(255, 51, 51));
        jButton_elimianr_categoria.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jButton_elimianr_categoria.setText("Eliminar");
        jButton_elimianr_categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_elimianr_categoriaActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_elimianr_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 90, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 130, 90));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel_descripcion.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel_descripcion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel_descripcion.setText("Descripcion:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_descripcion)
                    .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_descripcion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 190, 80));

        jlabel_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        getContentPane().add(jlabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 590, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_actualizar_categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizar_categoriaActionPerformed
        // TODO add your handling code here:
        if (!txt_descripcion.getText().isEmpty()) {
            Categoria categoria = new Categoria();
            Ctrl_Categoria controlCategoria = new Ctrl_Categoria();
            
            categoria.setDescripcion(txt_descripcion.getText().trim());
            if (controlCategoria.actualizar(categoria, idCategoria)) {
                JOptionPane.showMessageDialog(null,"Categoria Actualizada");
                txt_descripcion.setText("");
                this.CargarTablaCategorias();
                
                
            }else{
            JOptionPane.showMessageDialog(null,"Error al actualizar Categoria");}
                                      
        } else {
            JOptionPane.showMessageDialog(null,"Selecciones Una Categoria");
        }
    }//GEN-LAST:event_jButton_actualizar_categoriaActionPerformed

    private void jButton_elimianr_categoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_elimianr_categoriaActionPerformed
        // TODO add your handling code here:
        if (!txt_descripcion.getText().isEmpty()) {
            Categoria categoria = new Categoria();
            Ctrl_Categoria controlCategoria = new Ctrl_Categoria();
            
            categoria.setDescripcion(txt_descripcion.getText().trim());
            if (!controlCategoria.eliminar(idCategoria)) {
                JOptionPane.showMessageDialog(null,"Categoria Eliminada");
                txt_descripcion.setText("");
                this.CargarTablaCategorias();
                
                
            }else{
            JOptionPane.showMessageDialog(null,"Error al eliminar Categoria");}
                                      
        } else {
            JOptionPane.showMessageDialog(null,"Seleccione Una Categoria");
        }
    }//GEN-LAST:event_jButton_elimianr_categoriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_actualizar_categoria;
    private javax.swing.JButton jButton_elimianr_categoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_descripcion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_categorias;
    private javax.swing.JLabel jlabel_wallpaper;
    private javax.swing.JTextField txt_descripcion;
    // End of variables declaration//GEN-END:variables

    /*
    metodo para mostrar todas las categorias registradas
     */
    private void CargarTablaCategorias() {
        Connection con = Conexion.conectar();
        DefaultTableModel model = new DefaultTableModel();
        String sql = "select idCategoria, descripcion , estado from tb_categoria;";
        Statement st;

        try {
            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InterGestionarCategoria.jTable_categorias = new JTable(model);
            InterGestionarCategoria.jScrollPane1.setViewportView(InterGestionarCategoria.jTable_categorias);
            
            
            model.addColumn("ID");
            model.addColumn("DESCRIPCION");
            model.addColumn("ESTADO");
            
            while (rs.next()) {
                Object fila[] = new Object[3];
                
                for (int i =0; i<3 ; i ++) {
                    fila[i] = rs.getObject(i+1);
                    
                }
                model.addRow(fila);
                
            }
            con.close();

        } catch (SQLException e) {
            System.out.println("Error al llenar la tabla " + e);
        }
        
        jTable_categorias.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e){
            int fila_point = jTable_categorias.rowAtPoint(e.getPoint());
            int columna_point= 0;
            
            if(fila_point > -1){
            idCategoria =(int) model.getValueAt(fila_point, columna_point);
            EnviarDatosCategoriaSeleccionada(idCategoria);
            }
            
            }
        });

    }
    
    private void EnviarDatosCategoriaSeleccionada(int idCategoria){
        try {
            
            Connection con = Conexion.conectar();
            PreparedStatement pst = con.prepareStatement(
                    "select * from tb_categoria where idCategoria = '"+idCategoria+"'");
             ResultSet rs = pst.executeQuery();
             if (rs.next()) {
                txt_descripcion.setText(rs.getString("descripcion"));
            }
           con.close();
                 
            
        } catch (SQLException e) {
        System.out.println("Error Cargar Categoria" );
        }
}

}
